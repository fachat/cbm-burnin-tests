
#echo "timer1"
#print *
test_timer1:
	; ----------------------------------
	; TIMER 1
	; 
	; Test by setting timer to $8080 and counting
	; loops (cycles) until interrupt happens
	; 
	; adapted from original PET burnin program
	;
	.(
	; store expected timer value (from setup table)
	sta ptr2
	stx ptr2+1

	lda #0
	sta $e84b		; single shot timers
	lda #$7f
	sta $e84e		; disable all VIA interrupts
	sta $e84d		; clr all interrupt flags
	lda #$c0
	sta $e84e		; enable T1 interrupt

	ldy #$00		; initialize 25/YR timer
	sty cnt

	sty viaifr

	dey
	sty ptr1		; initialize timer snapshot
	sty ptr1+1		; with $ff to distinguish no int (ff) from fast int (00)
	iny

	; set timer to $8080
	lda #$80
	sta $e844		; T1L low byte latch
	sta $e845		; T1H high byte counter, start timer

	; enable interrupt
	; interrupt routine (set in 50HZ test) transfers cnt/YR to ptr1/+1
l1511	cli
	nop
	sei
	;bit $e84d		; did we have an interrupt?
	bit viaifr		; did we have an interrupt?
	bvs l1529		; yes, T1 interrupt

	; increase 25/YR counter
	inc cnt
	bne l1511
	iny
	bne l1511

	; overflow
l1520	lda #$00		; invisible
	ldy #$16		; "BAD"
	jsr badout 

	jsr spout
	lda ptr1+1
	jsr hexout
	lda ptr1
	jmp hexout

	; compare with target value $066c
l1529	
	lda #$7f		; disable interrupts
	sta $e84e

	lda ptr1+1
	cmp ptr2+1
	bne l1520
	lda ptr1
	cmp ptr2
	bne l1520

#ifdef DEBUG
	lda ptr1+1
	jsr hexout
	lda ptr1
	jsr hexout
#endif
	; ok
	jmp okout		; l7db
	.)


